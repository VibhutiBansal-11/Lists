{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "mount_file_id": "1Aj8691RpuiKajPh0Y3-4CP9iAys0fuDt",
      "authorship_tag": "ABX9TyPguXL6km9pphjnWeBhmMTj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/VibhutiBansal-11/Projects/blob/master/acc62\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oygtt-W_6pTN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from keras.models import Sequential\n",
        "from keras.layers import Convolution2D\n",
        "from keras.layers import MaxPooling2D\n",
        "from keras.layers import Flatten\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "from keras.applications.resnet50 import ResNet50,preprocess_input\n",
        "from keras.layers import AveragePooling2D\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import Flatten\n",
        "from keras.layers import Dense\n",
        "from keras.layers import Input\n",
        "from keras.models import Model\n",
        "from keras.optimizers import Adam,SGD\n",
        "from keras.utils import to_categorical\n",
        "from sklearn.preprocessing import LabelBinarizer\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import classification_report\n",
        "from sklearn.metrics import confusion_matrix\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import argparse\n",
        "import cv2\n",
        "import os\n",
        "from keras.layers import GlobalAveragePooling2D\n",
        "from keras.layers import Dense, Dropout, BatchNormalization\n",
        "from keras import optimizers\n",
        "from keras.layers import Input\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "from tensorflow.keras import regularizers\n",
        "from keras.applications import InceptionV3\n",
        "from keras.applications import Xception\n",
        "#from keras import ExponentialDecay\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yv4kU4WlIoyU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Initialing the CNN\n",
        "baseModel = Xception(weights='imagenet',input_tensor=Input(shape=(224, 224, 3)),include_top=False)\n",
        "x = baseModel.output\n",
        "headModel = GlobalAveragePooling2D()(x)\n",
        "\n",
        "headModel = Dense(8, activation=\"softmax\")(headModel)\n",
        "model = Model(inputs=baseModel.input, outputs=headModel)\n",
        "for layer in baseModel.layers:\n",
        "\tlayer.trainable = False"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w2KfT0Drrn4r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model.compile(loss=\"categorical_crossentropy\", optimizer=SGD(learning_rate=1e-2,momentum=0.9,decay=1e-6),metrics=['accuracy'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-_qkCsbYPwY5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "e5d7de96-19fe-4d7b-ed20-d175b55a52d0"
      },
      "source": [
        "\n",
        "train_datagen = ImageDataGenerator(rescale=1./255,\n",
        "    shear_range=0.2,\n",
        "    zoom_range=0.2,\n",
        "    horizontal_flip=True,\n",
        "    vertical_flip = True,\n",
        "    validation_split=0.18)\n",
        "\n",
        "data_train  = train_datagen.flow_from_directory(\n",
        "        '/content/drive/My Drive/train',\n",
        "        target_size=(224, 224),\n",
        "        batch_size=4,\n",
        "        class_mode='categorical',\n",
        "        subset='training')\n",
        "data_test = train_datagen.flow_from_directory(\n",
        "        '/content/drive/My Drive/train',\n",
        "        target_size=(224, 224),\n",
        "        batch_size=4,\n",
        "        class_mode='categorical',\n",
        "        subset='validation')\n",
        "data_train.samples"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 302 images belonging to 8 classes.\n",
            "Found 61 images belonging to 8 classes.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "302"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fAmNzMEgvfOm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "7c4b67f2-50ff-49ba-cf0a-7c5d75de2ffe"
      },
      "source": [
        "qw = model.fit_generator(\n",
        "        data_train,\n",
        "        steps_per_epoch=25,\n",
        "        epochs=50,\n",
        "        validation_data = data_test,\n",
        "        validation_steps = 10\n",
        "      )"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "25/25 [==============================] - 41s 2s/step - loss: 2.2360 - accuracy: 0.1327 - val_loss: 3.2906 - val_accuracy: 0.1000\n",
            "Epoch 2/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 2.0377 - accuracy: 0.2400 - val_loss: 2.9050 - val_accuracy: 0.2432\n",
            "Epoch 3/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 2.0113 - accuracy: 0.2800 - val_loss: 3.5026 - val_accuracy: 0.1500\n",
            "Epoch 4/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.7652 - accuracy: 0.3200 - val_loss: 2.7113 - val_accuracy: 0.4595\n",
            "Epoch 5/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.6403 - accuracy: 0.4100 - val_loss: 3.7504 - val_accuracy: 0.0811\n",
            "Epoch 6/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.7329 - accuracy: 0.3673 - val_loss: 1.8143 - val_accuracy: 0.3250\n",
            "Epoch 7/50\n",
            "25/25 [==============================] - 39s 2s/step - loss: 1.6287 - accuracy: 0.4200 - val_loss: 2.2470 - val_accuracy: 0.3514\n",
            "Epoch 8/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.6108 - accuracy: 0.4200 - val_loss: 0.0566 - val_accuracy: 0.2973\n",
            "Epoch 9/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.5264 - accuracy: 0.4796 - val_loss: 1.7754 - val_accuracy: 0.5000\n",
            "Epoch 10/50\n",
            "25/25 [==============================] - 39s 2s/step - loss: 1.5806 - accuracy: 0.4800 - val_loss: 1.9237 - val_accuracy: 0.4595\n",
            "Epoch 11/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.5698 - accuracy: 0.3367 - val_loss: 4.5164 - val_accuracy: 0.2750\n",
            "Epoch 12/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.7269 - accuracy: 0.4600 - val_loss: 1.7930 - val_accuracy: 0.4324\n",
            "Epoch 13/50\n",
            "25/25 [==============================] - 39s 2s/step - loss: 1.4573 - accuracy: 0.4900 - val_loss: 2.9973 - val_accuracy: 0.3514\n",
            "Epoch 14/50\n",
            "25/25 [==============================] - 40s 2s/step - loss: 1.5581 - accuracy: 0.4400 - val_loss: 3.5185 - val_accuracy: 0.5000\n",
            "Epoch 15/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.4634 - accuracy: 0.5102 - val_loss: 2.9002 - val_accuracy: 0.3514\n",
            "Epoch 16/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.3575 - accuracy: 0.5400 - val_loss: 2.3308 - val_accuracy: 0.3243\n",
            "Epoch 17/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.4123 - accuracy: 0.4898 - val_loss: 3.2362 - val_accuracy: 0.3750\n",
            "Epoch 18/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.4230 - accuracy: 0.5100 - val_loss: 3.2892 - val_accuracy: 0.3784\n",
            "Epoch 19/50\n",
            "25/25 [==============================] - 39s 2s/step - loss: 1.3312 - accuracy: 0.5400 - val_loss: 3.2092 - val_accuracy: 0.2500\n",
            "Epoch 20/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.2808 - accuracy: 0.5612 - val_loss: 1.4622 - val_accuracy: 0.4324\n",
            "Epoch 21/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.2422 - accuracy: 0.6400 - val_loss: 4.6979 - val_accuracy: 0.3514\n",
            "Epoch 22/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.4634 - accuracy: 0.4898 - val_loss: 1.2965 - val_accuracy: 0.4500\n",
            "Epoch 23/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.2246 - accuracy: 0.5700 - val_loss: 0.7245 - val_accuracy: 0.4595\n",
            "Epoch 24/50\n",
            "25/25 [==============================] - 37s 1s/step - loss: 1.2838 - accuracy: 0.5200 - val_loss: 0.7688 - val_accuracy: 0.3784\n",
            "Epoch 25/50\n",
            "25/25 [==============================] - 40s 2s/step - loss: 1.2101 - accuracy: 0.5700 - val_loss: 0.3192 - val_accuracy: 0.6250\n",
            "Epoch 26/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.2549 - accuracy: 0.5900 - val_loss: 3.6050 - val_accuracy: 0.4324\n",
            "Epoch 27/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.3096 - accuracy: 0.5714 - val_loss: 2.4264 - val_accuracy: 0.3250\n",
            "Epoch 28/50\n",
            "25/25 [==============================] - 39s 2s/step - loss: 1.1952 - accuracy: 0.6800 - val_loss: 3.4958 - val_accuracy: 0.3784\n",
            "Epoch 29/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1521 - accuracy: 0.6400 - val_loss: 2.2024 - val_accuracy: 0.5405\n",
            "Epoch 30/50\n",
            "25/25 [==============================] - 40s 2s/step - loss: 1.0226 - accuracy: 0.6837 - val_loss: 3.3387 - val_accuracy: 0.4500\n",
            "Epoch 31/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.2655 - accuracy: 0.5500 - val_loss: 2.3082 - val_accuracy: 0.3243\n",
            "Epoch 32/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1609 - accuracy: 0.6100 - val_loss: 0.1355 - val_accuracy: 0.3514\n",
            "Epoch 33/50\n",
            "25/25 [==============================] - 39s 2s/step - loss: 1.0978 - accuracy: 0.6600 - val_loss: 2.5304 - val_accuracy: 0.5500\n",
            "Epoch 34/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1742 - accuracy: 0.5714 - val_loss: 3.5638 - val_accuracy: 0.3784\n",
            "Epoch 35/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.3035 - accuracy: 0.5204 - val_loss: 3.9664 - val_accuracy: 0.3250\n",
            "Epoch 36/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.0139 - accuracy: 0.6400 - val_loss: 1.6273 - val_accuracy: 0.3243\n",
            "Epoch 37/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1916 - accuracy: 0.6500 - val_loss: 3.0893 - val_accuracy: 0.3514\n",
            "Epoch 38/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.2108 - accuracy: 0.5816 - val_loss: 0.7508 - val_accuracy: 0.5000\n",
            "Epoch 39/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.0249 - accuracy: 0.6800 - val_loss: 4.7215 - val_accuracy: 0.3514\n",
            "Epoch 40/50\n",
            "25/25 [==============================] - 37s 1s/step - loss: 1.0587 - accuracy: 0.6224 - val_loss: 0.8274 - val_accuracy: 0.4595\n",
            "Epoch 41/50\n",
            "25/25 [==============================] - 39s 2s/step - loss: 1.1449 - accuracy: 0.6600 - val_loss: 2.0909 - val_accuracy: 0.4500\n",
            "Epoch 42/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1230 - accuracy: 0.6000 - val_loss: 1.7663 - val_accuracy: 0.4865\n",
            "Epoch 43/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 0.9685 - accuracy: 0.7200 - val_loss: 4.1681 - val_accuracy: 0.5250\n",
            "Epoch 44/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1022 - accuracy: 0.6300 - val_loss: 2.1539 - val_accuracy: 0.4054\n",
            "Epoch 45/50\n",
            "25/25 [==============================] - 37s 1s/step - loss: 1.1518 - accuracy: 0.6327 - val_loss: 4.8523 - val_accuracy: 0.4324\n",
            "Epoch 46/50\n",
            "25/25 [==============================] - 40s 2s/step - loss: 0.7276 - accuracy: 0.7500 - val_loss: 5.1821 - val_accuracy: 0.4750\n",
            "Epoch 47/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1206 - accuracy: 0.6600 - val_loss: 5.1906 - val_accuracy: 0.4595\n",
            "Epoch 48/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.0480 - accuracy: 0.6500 - val_loss: 0.0036 - val_accuracy: 0.4324\n",
            "Epoch 49/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.0211 - accuracy: 0.6429 - val_loss: 0.7403 - val_accuracy: 0.4000\n",
            "Epoch 50/50\n",
            "25/25 [==============================] - 38s 2s/step - loss: 1.1647 - accuracy: 0.5300 - val_loss: 3.0370 - val_accuracy: 0.6216\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sDWwEHj72k59",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}